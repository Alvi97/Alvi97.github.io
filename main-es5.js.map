{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/services/api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","caller","http","countries","Countries","subscribe","data","takenAt","statistic_taken_at","affected_countries","TotalCases","totalCases","total_cases","totalDeaths","total_deaths","totalRecovered","total_recovered","chart","geodata","projection","Miller","polygonSeries","series","push","useGeodata","polygonTemplate","mapPolygons","template","applyOnClones","togglable","tooltipText","nonScalingStroke","strokeOpacity","fill","colors","getIndex","lastSelected","events","on","ev","countryname","test","target","dataItem","dataContext","name","url","httpOptions","headers","get","Object","totalCasesByCountry","length","totalDeathsByCountry","totalRecoveredByCountry","totalCasesCountryName","country_name","isActive","zoomToMapObject","ss","states","create","properties","hs","exclude","smallMap","align","valign","zoomControl","homeButton","goHome","icon","padding","width","path","marginBottom","parent","insertBefore","plusButton","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","Apis","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit, Injectable } from \"@angular/core\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { Apis } from \"./services/api.service\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\n@Injectable()\r\nexport class AppComponent implements OnInit {\r\n  constructor(private caller: Apis, private http: HttpClient) {}\r\n\r\n  takenAt;\r\n  countries = [];\r\n  totalCases;\r\n  totalDeaths;\r\n  totalRecovered;\r\n  test;\r\n  totalCasesCountryName;\r\n  totalCasesByCountry;\r\n  totalDeathsByCountry;\r\n  totalRecoveredByCountry;\r\n  ngOnInit() {\r\n    this.caller.Countries().subscribe(data => {\r\n      this.takenAt = data.statistic_taken_at;\r\n      this.countries = data.affected_countries;\r\n    }); \r\n\r\n    this.caller.TotalCases().subscribe(data => {\r\n      this.totalCases = data.total_cases;\r\n      this.totalDeaths = data.total_deaths;\r\n      this.totalRecovered = data.total_recovered;\r\n    });\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    am4core.useTheme(am4themes_animated);\r\n    // Themes end\r\n\r\n    /* Create map instance */\r\n    let chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n\r\n    /* Set map definition */\r\n    chart.geodata = am4geodata_worldLow;\r\n\r\n    /* Set projection */\r\n    chart.projection = new am4maps.projections.Miller();\r\n\r\n    /* Create map polygon series */\r\n    let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n    /* Make map load polygon (like country names) data from GeoJSON */\r\n    polygonSeries.useGeodata = true;\r\n\r\n    /* Configure series */\r\n    let polygonTemplate: any = polygonSeries.mapPolygons.template;\r\n    polygonTemplate.applyOnClones = true;\r\n    polygonTemplate.togglable = true;\r\n    polygonTemplate.tooltipText = \"{name}\";\r\n    polygonTemplate.nonScalingStroke = true;\r\n    polygonTemplate.strokeOpacity = 0.5;\r\n    polygonTemplate.fill = chart.colors.getIndex(0);\r\n    let lastSelected;\r\n    polygonTemplate.events.on(\"hit\", ev => {\r\n      let countryname;\r\n      this.test = ev.target.dataItem.dataContext.name;\r\n      if (this.test == \"United Kingdom\") {\r\n        countryname = \"UK\";\r\n      } else if (this.test == \"United States\") {\r\n        countryname = \"USA\";\r\n      } else countryname = this.test;\r\n\r\n      const url =\r\n        \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=\" +\r\n        countryname;\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": \"5ac3fafademsh1a8ef1b0741135dp158e82jsn6c5887e81b38\"\r\n        })\r\n      };\r\n\r\n      this.http.get(url, httpOptions).subscribe(data => {\r\n        let test = [];\r\n        test = data[Object.keys(data)[1]];\r\n        this.totalCasesByCountry = test[Object.keys(test)[(Object.keys(test).length)-1]].total_cases;\r\n        this.totalDeathsByCountry = test[Object.keys(test)[(Object.keys(test).length)-1]].total_deaths;\r\n        this.totalRecoveredByCountry = test[Object.keys(test)[(Object.keys(test).length)-1]].total_recovered;\r\n          test[Object.keys(test)[(Object.keys(test).length)-1]].total_recovered;\r\n        this.totalCasesCountryName = test[Object.keys(test)[(Object.keys(test).length)-1]].country_name;\r\n      });\r\n\r\n      if (lastSelected) {\r\n        // This line serves multiple purposes:\r\n        // 1. Clicking a country twice actually de-activates, the line below\r\n        //    de-activates it in advance, so the toggle then re-activates, making it\r\n        //    appear as if it was never de-activated to begin with.\r\n        // 2. Previously activated countries should be de-activated.\r\n        lastSelected.isActive = false;\r\n      }\r\n      ev.target.series.chart.zoomToMapObject(ev.target);\r\n      if (lastSelected !== ev.target) {\r\n        lastSelected = ev.target;\r\n      }\r\n    });\r\n\r\n    /* Create selected and hover states and set alternative fill color */\r\n    let ss = polygonTemplate.states.create(\"active\");\r\n    ss.properties.fill = chart.colors.getIndex(2);\r\n\r\n    let hs = polygonTemplate.states.create(\"hover\");\r\n    hs.properties.fill = chart.colors.getIndex(4);\r\n\r\n    // Hide Antarctica\r\n    polygonSeries.exclude = [\"AQ\"];\r\n\r\n    // Small map\r\n    chart.smallMap = new am4maps.SmallMap();\r\n    // Re-position to top right (it defaults to bottom left)\r\n    chart.smallMap.align = \"right\";\r\n    chart.smallMap.valign = \"top\";\r\n    chart.smallMap.series.push(polygonSeries);\r\n\r\n    // Zoom control\r\n    chart.zoomControl = new am4maps.ZoomControl();\r\n\r\n    let homeButton = new am4core.Button();\r\n    homeButton.events.on(\"hit\", function() {\r\n      chart.goHome();\r\n    });\r\n\r\n    homeButton.icon = new am4core.Sprite();\r\n    homeButton.padding(7, 5, 7, 5);\r\n    homeButton.width = 30;\r\n    homeButton.icon.path =\r\n      \"M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8\";\r\n    homeButton.marginBottom = 10;\r\n    homeButton.parent = chart.zoomControl;\r\n    homeButton.insertBefore(chart.zoomControl.plusButton);\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"text-center\">\r\n    <h3 class=\"display-4 text-center\">Covid-19 real-time results</h3>\r\n    <p class=\"display-4 text-center\">\r\n      Last Updated in : <span>{{ takenAt }}</span>\r\n    </p>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"card\">\r\n          <h5 class=\"card-title\">Total Cases</h5>\r\n          <div class=\"card-body\">\r\n            {{ totalCases }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card\">\r\n          <h5 class=\"card-title\">Total Deaths</h5>\r\n          <div class=\"card-body\">\r\n            {{ totalDeaths }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card\">\r\n          <h5 class=\"card-title\">Total Recovered</h5>\r\n          <div class=\"card-body\">\r\n            {{ totalRecovered }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"chartdiv\"></div>\r\n\r\n  <div class=\"row text-center\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Country:</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalCasesCountryName !== ' '\">\r\n            {{\r\n              totalCasesCountryName || \"Select A Country To View the Data\"\r\n            }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Total Cases</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalCasesByCountry !== ' '\">\r\n            {{ totalCasesByCountry || \"0\" }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Total Deaths</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalDeathsByCountry !== ' '\">\r\n            {{ totalDeathsByCountry || \"0\" }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Total Recovered</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalRecoveredByCountry !== ' '\">\r\n            {{ totalRecoveredByCountry || \"0\" }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"copyright\">\r\n    <div class=\"row\">\r\n      <h4>© Alvi Lika</h4>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport {Apis} from './services/api.service'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [Apis], \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class Apis {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"5ac3fafademsh1a8ef1b0741135dp158e82jsn6c5887e81b38\"\r\n    })\r\n  };\r\n\r\n  Countries(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/affected.php\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  TotalCases(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  TotalCasesByCountry(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  TotalCasesBySpecificCountry(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=Germany\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  MaskUsageInstructions(): Observable<any> {\r\n     const url =\r\n       \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/masks.php\";\r\n \r\n     return this.http.get(url, this.httpOptions);\r\n   }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'zone.js'\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}