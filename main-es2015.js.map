{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit, Injectable } from \"@angular/core\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { Apis } from \"./services/api.service\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\n@Injectable()\r\nexport class AppComponent implements OnInit {\r\n  constructor(private caller: Apis, private http: HttpClient) {}\r\n\r\n  takenAt;\r\n  countries = [];\r\n  totalCases;\r\n  totalDeaths;\r\n  totalRecovered;\r\n  test;\r\n  totalCasesCountryName;\r\n  totalCasesByCountry;\r\n  totalDeathsByCountry;\r\n  totalRecoveredByCountry;\r\n  ngOnInit() {\r\n    this.caller.Countries().subscribe(data => {\r\n      console.log(data, \"countries\");\r\n      this.takenAt = data.statistic_taken_at;\r\n      this.countries = data.affected_countries;\r\n      console.log(this.countries);\r\n    }); \r\n\r\n    this.caller.TotalCases().subscribe(data => {\r\n      console.log(data, \"totalcases\");\r\n      this.totalCases = data.total_cases;\r\n      this.totalDeaths = data.total_deaths;\r\n      this.totalRecovered = data.total_recovered;\r\n      console.log(this.countries);\r\n    });\r\n\r\n    \r\n\r\n\r\n    \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    this.caller.MaskUsageInstructions().subscribe(data => {\r\n      console.log(data, \"maskInstructions\");\r\n      console.log(\"bbbbbbbb\");\r\n    });\r\n\r\n\r\n    am4core.useTheme(am4themes_animated);\r\n    // Themes end\r\n\r\n    /* Create map instance */\r\n    let chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n\r\n    /* Set map definition */\r\n    chart.geodata = am4geodata_worldLow;\r\n\r\n    /* Set projection */\r\n    chart.projection = new am4maps.projections.Miller();\r\n\r\n    /* Create map polygon series */\r\n    let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n\r\n    /* Make map load polygon (like country names) data from GeoJSON */\r\n    polygonSeries.useGeodata = true;\r\n\r\n    /* Configure series */\r\n    let polygonTemplate: any = polygonSeries.mapPolygons.template;\r\n    polygonTemplate.applyOnClones = true;\r\n    polygonTemplate.togglable = true;\r\n    polygonTemplate.tooltipText = \"{name}\";\r\n    polygonTemplate.nonScalingStroke = true;\r\n    polygonTemplate.strokeOpacity = 0.5;\r\n    polygonTemplate.fill = chart.colors.getIndex(0);\r\n    let lastSelected;\r\n    polygonTemplate.events.on(\"hit\", ev => {\r\n      let countryname;\r\n      console.log(ev.target.dataItem.dataContext.name, \"abbbbbaaaa\");\r\n      this.test = ev.target.dataItem.dataContext.name;\r\n      if (this.test == \"United Kingdom\") {\r\n        countryname = \"UK\";\r\n      } else if (this.test == \"United States\") {\r\n        countryname = \"USA\";\r\n      } else countryname = this.test;\r\n      console.log(countryname);\r\n\r\n      const url =\r\n        \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=\" +\r\n        countryname;\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n          \"x-rapidapi-key\": \"5ac3fafademsh1a8ef1b0741135dp158e82jsn6c5887e81b38\"\r\n        })\r\n      };\r\n\r\n      this.http.get(url, httpOptions).subscribe(data => {\r\n        console.log(data);\r\n        let test = [];\r\n        test = data[Object.keys(data)[1]];\r\n        console.log(test, \"tesstasatastastat\");\r\n        console.log ((Object.keys(test).length)-1); \r\n        console.log(test[Object.keys(test)[test[(Object.keys(test).length)-1]]]);\r\n        this.totalCasesByCountry = test[Object.keys(test)[(Object.keys(test).length)-1]].total_cases;\r\n        this.totalDeathsByCountry = test[Object.keys(test)[(Object.keys(test).length)-1]].total_deaths;\r\n          test[Object.keys(test)[(Object.keys(test).length)-1]].total_recovered;\r\n        this.totalCasesCountryName = test[Object.keys(test)[(Object.keys(test).length)-1]].country_name;\r\n      });\r\n\r\n      if (lastSelected) {\r\n        // This line serves multiple purposes:\r\n        // 1. Clicking a country twice actually de-activates, the line below\r\n        //    de-activates it in advance, so the toggle then re-activates, making it\r\n        //    appear as if it was never de-activated to begin with.\r\n        // 2. Previously activated countries should be de-activated.\r\n        lastSelected.isActive = false;\r\n      }\r\n      ev.target.series.chart.zoomToMapObject(ev.target);\r\n      if (lastSelected !== ev.target) {\r\n        lastSelected = ev.target;\r\n      }\r\n    });\r\n\r\n    /* Create selected and hover states and set alternative fill color */\r\n    let ss = polygonTemplate.states.create(\"active\");\r\n    ss.properties.fill = chart.colors.getIndex(2);\r\n\r\n    let hs = polygonTemplate.states.create(\"hover\");\r\n    hs.properties.fill = chart.colors.getIndex(4);\r\n\r\n    // Hide Antarctica\r\n    polygonSeries.exclude = [\"AQ\"];\r\n\r\n    // Small map\r\n    chart.smallMap = new am4maps.SmallMap();\r\n    // Re-position to top right (it defaults to bottom left)\r\n    chart.smallMap.align = \"right\";\r\n    chart.smallMap.valign = \"top\";\r\n    chart.smallMap.series.push(polygonSeries);\r\n\r\n    // Zoom control\r\n    chart.zoomControl = new am4maps.ZoomControl();\r\n\r\n    let homeButton = new am4core.Button();\r\n    homeButton.events.on(\"hit\", function() {\r\n      chart.goHome();\r\n    });\r\n\r\n    homeButton.icon = new am4core.Sprite();\r\n    homeButton.padding(7, 5, 7, 5);\r\n    homeButton.width = 30;\r\n    homeButton.icon.path =\r\n      \"M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8\";\r\n    homeButton.marginBottom = 10;\r\n    homeButton.parent = chart.zoomControl;\r\n    homeButton.insertBefore(chart.zoomControl.plusButton);\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"text-center\">\r\n    <h3 class=\"display-4 text-center\">Covid-19 real-time results</h3>\r\n    <p class=\"display-4 text-center\">\r\n      Last Updated in : <span>{{ takenAt }}</span>\r\n    </p>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm\">\r\n        <div class=\"card\">\r\n          <h5 class=\"card-title\">Total Cases</h5>\r\n          <div class=\"card-body\">\r\n            {{ totalCases }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card\">\r\n          <h5 class=\"card-title\">Total Deaths</h5>\r\n          <div class=\"card-body\">\r\n            {{ totalDeaths }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm\">\r\n        <div class=\"card\">\r\n          <h5 class=\"card-title\">Total Recovered</h5>\r\n          <div class=\"card-body\">\r\n            {{ totalRecovered }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"chartdiv\"></div>\r\n\r\n  <div class=\"row text-center\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Country:</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalCasesCountryName !== ' '\">\r\n            {{\r\n              totalCasesCountryName || \"Select A Country To View the Data\"\r\n            }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Total Cases</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalCasesByCountry !== ' '\">\r\n            {{ totalCasesByCountry || \"0\" }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Total Deaths</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalDeathsByCountry !== ' '\">\r\n            {{ totalDeathsByCountry || \"0\" }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-title\">Total Recovered</h5>\r\n        <div class=\"card-body\">\r\n          <span *ngIf=\"totalRecoveredByCountry !== ' '\">\r\n            {{ totalRecoveredByCountry || \"0\" }}</span\r\n          >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"copyright\">\r\n    <div class=\"row\">\r\n      <h4>© Alvi Lika</h4>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport {Apis} from './services/api.service'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [Apis], \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, of } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class Apis {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"5ac3fafademsh1a8ef1b0741135dp158e82jsn6c5887e81b38\"\r\n    })\r\n  };\r\n\r\n  Countries(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/affected.php\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  TotalCases(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  TotalCasesByCountry(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  TotalCasesBySpecificCountry(): Observable<any> {\r\n    const url =\r\n      \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=Germany\";\r\n\r\n    return this.http.get(url, this.httpOptions);\r\n  }\r\n\r\n  MaskUsageInstructions(): Observable<any> {\r\n     const url =\r\n       \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/masks.php\";\r\n \r\n     return this.http.get(url, this.httpOptions);\r\n   }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'zone.js'\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}